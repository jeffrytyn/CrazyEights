#BlueJ class context
comment0.target=Board
comment0.text=\r\n\ This\ class\ represents\ a\ Board\ that\ can\ be\ used\ in\ a\ collection\r\n\ of\ solitaire\ games\ similar\ to\ Elevens.\ \ The\ variants\ differ\ in\r\n\ card\ removal\ and\ the\ board\ size.\r\n
comment1.params=size\ playerHand\ computerHand\ ranks\ suits\ pointValues
comment1.target=Board(int,\ int,\ int,\ java.lang.String[],\ java.lang.String[],\ int[])
comment1.text=\r\n\ Creates\ a\ new\ <code>Board</code>\ instance.\r\n\ @param\ size\ the\ number\ of\ cards\ in\ the\ board\r\n\ @param\ ranks\ the\ names\ of\ the\ card\ ranks\ needed\ to\ create\ the\ deck\r\n\ @param\ suits\ the\ names\ of\ the\ card\ suits\ needed\ to\ create\ the\ deck\r\n\ @param\ pointValues\ the\ integer\ values\ of\ the\ cards\ needed\ to\ create\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ deck\r\n
comment10.params=gui
comment10.target=void\ acknowledgeGUI(CardGameGUI)
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\r\n\ Determines\ if\ the\ board\ is\ empty\ (has\ no\ cards).\r\n\ @return\ true\ if\ this\ board\ is\ empty;\ false\ otherwise.\r\n
comment12.params=k
comment12.target=void\ deal(int)
comment12.text=\r\n\ Deal\ a\ card\ to\ the\ kth\ position\ in\ this\ board.\r\n\ If\ the\ deck\ is\ empty,\ the\ kth\ card\ is\ set\ to\ null.\r\n\ @param\ k\ the\ index\ of\ the\ card\ to\ be\ dealt.\r\n
comment13.params=k
comment13.target=void\ AddToStack(int)
comment14.params=
comment14.target=int\ deckSize()
comment14.text=\r\n\ Accesses\ the\ deck's\ size.\r\n\ @return\ the\ number\ of\ undealt\ cards\ left\ in\ the\ deck.\r\n
comment15.params=k
comment15.target=Card\ cardAt(int)
comment15.text=\r\n\ Accesses\ a\ card\ on\ the\ board.\r\n\ @return\ the\ card\ at\ position\ k\ on\ the\ board.\r\n\ @param\ k\ is\ the\ board\ position\ of\ the\ card\ to\ return.\r\n
comment16.params=selectedCards
comment16.target=void\ replaceSelectedCards(java.util.List)
comment16.text=\r\n\ Replaces\ selected\ cards\ on\ the\ board\ by\ dealing\ new\ cards.\r\n\ @param\ selectedCards\ is\ a\ list\ of\ the\ indices\ of\ the\r\n\ \ \ \ \ \ \ \ cards\ to\ be\ replaced.\r\n
comment17.params=
comment17.target=java.util.List\ cardIndexes()
comment17.text=\r\n\ Gets\ the\ indexes\ of\ the\ actual\ (non-null)\ cards\ on\ the\ board.\r\n\r\n\ @return\ a\ List\ that\ contains\ the\ locations\ (indexes)\r\n\ \ \ \ \ \ \ \ \ of\ the\ non-null\ entries\ on\ the\ board.\r\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\r\n\ Generates\ and\ returns\ a\ string\ representation\ of\ this\ board.\r\n\ @return\ the\ string\ version\ of\ this\ board.\r\n
comment19.params=
comment19.target=boolean\ gameIsWon()
comment19.text=\r\n\ Determine\ whether\ or\ not\ the\ game\ has\ been\ won,\r\n\ i.e.\ neither\ the\ board\ nor\ the\ deck\ has\ any\ more\ cards.\r\n\ @return\ true\ when\ the\ current\ game\ has\ been\ won;\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment2.params=
comment2.target=int\ GetCompHand()
comment20.params=selectedCards
comment20.target=boolean\ isLegal(java.util.List)
comment20.text=\r\n\ Method\ to\ be\ completed\ by\ the\ concrete\ class\ that\ determines\r\n\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal.\r\n\ @param\ selectedCards\ the\ list\ of\ the\ indices\ of\ the\ selected\ cards.\r\n\ @return\ true\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal;\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment21.params=
comment21.target=boolean\ anotherPlayIsPossible()
comment21.text=\r\n\ Method\ to\ be\ completed\ by\ the\ concrete\ class\ that\ determines\r\n\ if\ there\ are\ any\ legal\ plays\ left\ on\ the\ board.\r\n\ @return\ true\ if\ there\ is\ a\ legal\ play\ left\ on\ the\ board;\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment22.params=
comment22.target=void\ dealMyCards()
comment22.text=\r\n\ Deal\ cards\ to\ this\ board\ to\ start\ the\ game.\r\n
comment3.params=i
comment3.target=void\ SetCompHand(int)
comment4.params=
comment4.target=int\ GetPlayerHand()
comment5.params=i
comment5.target=void\ SetPlayerHand(int)
comment6.params=
comment6.target=void\ newGame()
comment6.text=\r\n\ Start\ a\ new\ game\ by\ shuffling\ the\ deck\ and\r\n\ dealing\ some\ cards\ to\ this\ board.\r\n
comment7.params=
comment7.target=int\ size()
comment7.text=\r\n\ Accesses\ the\ size\ of\ the\ board.\r\n\ Note\ that\ this\ is\ not\ the\ number\ of\ cards\ it\ contains,\r\n\ which\ will\ be\ smaller\ near\ the\ end\ of\ a\ winning\ game.\r\n\ @return\ the\ size\ of\ the\ board\r\n
comment8.params=
comment8.target=void\ drawPlayerCard()
comment9.params=i
comment9.target=void\ setSize(int)
numComments=23
